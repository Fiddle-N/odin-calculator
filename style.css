
* {
    box-sizing: border-box;
    touch-action: manipulation;
}

@media (prefers-color-scheme: light) {
    :root {
        --bg-colour: hsl(0, 0%, 95%);
        --txt-colour: black;

        --display-history-txt-colour: hsl(0, 0%, 38%);

        --key-border-colour: hsl(0, 0%, 90%);
        --key-border-top-colour: hsl(0, 0%, 90%);
        --key-border-bottom-colour: hsl(0, 0%, 80%);

        --key-numeric-bg-colour: rgb(255, 255, 255);
        --key-numeric-bg-colour-hover: rgb(252, 252, 252);
        --key-numeric-txt-colour-active: rgb(93, 93, 93);
        --key-numeric-bg-colour-active: rgb(244, 244, 244);

        --key-non-numeric-bg-colour: rgb(249, 249, 249);
        --key-non-numeric-bg-colour-hover: rgb(246, 246, 246);
        --key-non-numeric-txt-colour-active: rgb(93, 93, 93);
        --key-non-numeric-bg-colour-active: rgb(244, 244, 244);

        --key-equals-txt-colour: rgb(218, 231, 241);
        --key-equals-bg-colour: rgb(0, 90, 158);
        --key-equals-bg-colour-hover: rgb(25, 106, 167);
        --key-equals-txt-colour-active: rgb(173, 201, 223);
        --key-equals-bg-colour-active: rgb(49, 121, 175);

        --key-disabled-txt-colour: rgb(162, 162, 162);        
        --key-disabled-bg-colour: rgb(243, 243, 243);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --bg-colour: hsl(0, 0%, 13%);
        --txt-colour: white;

        --display-history-txt-colour: hsl(0, 0%, 65%);

        --key-border-colour: hsl(0, 0%, 19%);
        --key-border-top-colour: hsl(0, 0%, 21%);
        --key-border-bottom-colour: hsl(0, 0%, 19%);

        --key-numeric-bg-colour: rgb(59, 59, 59);
        --key-numeric-bg-colour-hover: rgb(50, 50, 50);
        --key-numeric-txt-colour-active: rgb(206, 206, 206);
        --key-numeric-bg-colour-active: rgb(40, 40, 40);

        --key-non-numeric-bg-colour: rgb(50, 50, 50);
        --key-non-numeric-bg-colour-hover: rgb(59, 59, 59);
        --key-non-numeric-txt-colour-active: rgb(208, 208, 208);
        --key-non-numeric-bg-colour-active: rgb(50, 50, 50);

        --key-equals-txt-colour: rgb(33, 52, 66);
        --key-equals-bg-colour: rgb(118, 185, 237);
        --key-equals-bg-colour-hover: rgb(109, 169, 216);
        --key-equals-txt-colour-active: rgb(64, 98, 124);
        --key-equals-bg-colour-active: rgb(105, 154, 195);
        
        --key-disabled-txt-colour: rgb(118, 118, 118);        
        --key-disabled-bg-colour: rgb(40, 40, 40);
    }
}

html {
    padding: 20pt;
    height: 100svh;
}

body {
    background-color: var(--bg-colour);
    color: var(--txt-colour);
    height: 100%;
    min-height: 525px;
    margin: 0;
    font-family: 'Open Sans', sans-serif;
    display: flex;
}

button {
    border: none;
    margin: 0;
    padding: 0;
    font-family: inherit;
    color: inherit;
}

.calculator {
    width: 900px;
    margin-left: auto;
    margin-right: auto;
    display: flex;
    flex-direction: column;
}

.displayHistoryContainer {
    flex: 0.1;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}

.displayHistory {
    color: var(--display-history-txt-colour);
    font-size: 0.9rem;
    height: 1.5rem;
    text-align: right;
}

.display {
    height: 140px;
    flex: 0.25;
    text-align: right;
    font-size: clamp(1rem, calc(100vw / 15), 2.8rem);
    font-weight: 600;
}

@media screen and (height > 750px) {
    .display {
        font-size: clamp(1rem, calc(100vw / 15), 4.4rem)
    }
}

/* 115 x 85 */

.keys {
    flex: 1;
    display: grid;
    grid-template-rows: repeat(5, 1fr);
    grid-template-columns: repeat(4, 1fr);
    gap: 2px;
}

.keys-keyContainer {
    display: flex;
    container-type: size;
}

.keys-key {
    flex: 1;
    font-size: 1.2rem;
    border: solid var(--key-border-colour) 1px;
    border-top-color: var(--key-border-top-colour);
    border-bottom-color: var(--key-border-bottom-colour);
    border-radius: 5px;
}

.keys-key:active {
    border-top-color: var(--key-border-colour);
    border-bottom-color: var(--key-border-colour);
}


@container (width > 115px) and (height > 85px) {
    .keys-key {
        font-size: 1.6rem;
    }
}

@container (width > 195px) and (height > 135px) {
    .keys-key {
        font-size: 2.3rem;
    }
}

.keys-keyContainer:has(.keys-key[data-symbol="±"]) {
    grid-column-start: 1;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="."]) {
    grid-column-start: 3;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="0"]) {
    grid-column-start: 2;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="1"]) {
    grid-column-start: 1;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="2"]) {
    grid-column-start: 2;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="3"]) {
    grid-column-start: 3;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="4"]) {
    grid-column-start: 1;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="5"]) {
    grid-column-start: 2;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="6"]) {
    grid-column-start: 3;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="7"]) {
    grid-column-start: 1;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="8"]) {
    grid-column-start: 2;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="9"]) {
    grid-column-start: 3;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="+"]) {
    grid-column-start: 4;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="-"]) {
    grid-column-start: 4;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="*"]) {
    grid-column-start: 4;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="/"]) {
    grid-column-start: 4;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-keyContainer:has(.keys-key[data-symbol="="]) {
    grid-column-start: 4;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="⌫"]) {
    grid-column-start: 1;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-keyContainer:has(.keys-key[data-symbol="CE"]) {
    grid-column-start: 2;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-keyContainer:has(.keys-key[data-symbol="C"]) {
    grid-column-start: 3;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-numeric {
    background-color: var(--key-numeric-bg-colour);
}

.keys-numeric:hover {
    background-color: var(--key-numeric-bg-colour-hover);
}

.keys-numeric:active {
    color: var(--key-numeric-txt-colour-active);
    background-color: var(--key-numeric-bg-colour-active);
}

.keys-nonNumeric {
    background-color: var(--key-non-numeric-bg-colour);
}

.keys-nonNumeric:hover {
    background-color: var(--key-non-numeric-bg-colour-hover);
}

.keys-nonNumeric:active {
    color: var(--key-non-numeric-txt-colour-active);
    background-color: var(--key-non-numeric-bg-colour-active);
}

.keys-equals {
    color: var(--key-equals-txt-colour);
    background-color: var(--key-equals-bg-colour);
}

.keys-equals:hover {
    background-color: var(--key-equals-bg-colour-hover);
}

.keys-equals:active {
    color: var(--key-equals-txt-colour-active);
    background-color: var(--key-equals-bg-colour-active);
}

.keys-disableOnZeroDivision:disabled, 
.keys-disableOnZeroDivision:disabled:hover,
.keys-disableOnZeroDivision:disabled:active {
    color: var(--key-disabled-txt-colour);
    background-color: var(--key-disabled-bg-colour);
    border-top-color: var(--key-border-colour);
    border-bottom-color: var(--key-border-colour);
}