
* {
    box-sizing: border-box;
}

body {
    background-color: hsl(0, 0%, 95%);
    height: 100vh;
    margin: 0;
    font-family: 'Open Sans', sans-serif;
    display: flex;
}

button {
    border: none;
    font-family: inherit;
}

.calculator {
    width: 900px;
    margin-left: auto;
    margin-right: auto;
    display: flex;
    flex-direction: column;
}

.displayHistory {
    height: 40px;   /* temporary */
}

.display {
    margin-bottom: 60px;
    text-align: right;
    font-size: 2.7rem;
    font-weight: 600;
}

@media screen and (height > 750px) {
    .display {
        font-size: 3.5rem;
    }
}

/* 115 x 85 */

.keys {
    flex: 1;
    display: grid;
    grid-template-rows: repeat(5, 1fr);
    grid-template-columns: repeat(4, 1fr);
    gap: 2px;
}

.keys-keyContainer {
    display: flex;
    container-type: size;
}

.keys-key {
    flex: 1;
    font-size: 1.2rem;
    border:solid hsl(0, 0%, 90%) 1px;
    border-bottom: solid hsl(0, 0%, 80%) 1px;
    border-radius: 5px;
}

.keys-key:active {
    border-bottom: solid hsl(0, 0%, 90%) 1px;
}


@container (width > 115px) and (height > 85px) {
    .keys-key {
        font-size: 1.6rem;
    }
}

@container (width > 195px) and (height > 135px) {
    .keys-key {
        font-size: 2.3rem;
    }
}

.keys-keyContainer:has(.keys-key[data-symbol="±"]) {
    grid-column-start: 1;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="."]) {
    grid-column-start: 3;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="0"]) {
    grid-column-start: 2;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="1"]) {
    grid-column-start: 1;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="2"]) {
    grid-column-start: 2;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="3"]) {
    grid-column-start: 3;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="4"]) {
    grid-column-start: 1;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="5"]) {
    grid-column-start: 2;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="6"]) {
    grid-column-start: 3;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="7"]) {
    grid-column-start: 1;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="8"]) {
    grid-column-start: 2;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="9"]) {
    grid-column-start: 3;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="+"]) {
    grid-column-start: 4;
    grid-row-start: -2;
    grid-row-end: -3;
}

.keys-keyContainer:has(.keys-key[data-symbol="-"]) {
    grid-column-start: 4;
    grid-row-start: -3;
    grid-row-end: -4;
}

.keys-keyContainer:has(.keys-key[data-symbol="*"]) {
    grid-column-start: 4;
    grid-row-start: -4;
    grid-row-end: -5;
}

.keys-keyContainer:has(.keys-key[data-symbol="/"]) {
    grid-column-start: 4;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-keyContainer:has(.keys-key[data-symbol="="]) {
    grid-column-start: 4;
    grid-row-start: -1;
    grid-row-end: -2;
}

.keys-keyContainer:has(.keys-key[data-symbol="⌫"]) {
    grid-column-start: 1;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-keyContainer:has(.keys-key[data-symbol="CE"]) {
    grid-column-start: 2;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-keyContainer:has(.keys-key[data-symbol="C"]) {
    grid-column-start: 3;
    grid-row-start: -5;
    grid-row-end: -6;
}

.keys-numeric {
    background-color: rgb(255, 255, 255);
}

.keys-numeric:hover {
    background-color: rgb(252, 252, 252);
}

.keys-numeric:active {
    color: rgb(95, 95, 95);
    background-color: rgb(249, 249, 249);
}

.keys-nonNumeric {
    background-color: rgb(249, 249, 249);
}

.keys-nonNumeric:hover {
    background-color: rgb(246, 246, 246);
}

.keys-nonNumeric:active {
    color: rgb(93, 93, 93);
    background-color: rgb(244, 244, 244);
}

.keys-equals {
    color: rgb(218, 231, 241);
    background-color: rgb(0, 90, 158);
}

.keys-equals:hover {
    background-color: rgb(25, 106, 167);
}

.keys-equals:active {
    color: rgb(173, 201, 223);
    background-color: rgb(49, 121, 175);
}